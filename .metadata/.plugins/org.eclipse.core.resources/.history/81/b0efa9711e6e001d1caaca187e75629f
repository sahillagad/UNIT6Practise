package USECASE;

import java.util.Scanner;

import javax.persistence.EntityManager;
import javax.persistence.Query;

import BEAN.Department;
import BEAN.Employee;
import Utility.EMUTILITY;

public class AddNewEmployee {

	public static void main(String[] args) {
		EntityManager em=EMUTILITY.provideEntityManager();
		
		
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter Department Name");
		String name= sc.next();
		
		System.out.println("Enter Department Location");
		String location=sc.next();
		
		/*
		 *  private String name;
	              private String location;
	              
		 */
		
		String jpql="select d from Department d where name=?1 AND location=?2 ";
		Query query=em.createQuery(jpql);
		query.setParameter(1, name);
		query.setParameter(2,location);
	 
	    Department depart=(Department)query.getSingleResult();
	 	   em.getTransaction().begin();

	       Department department=new Department();
	       department.setName(name);
	       department.setLocation(location);
	       
	 	   
		while(depart==null) {
		   System.out.println("You Want To Add Employee In The Department...(Y/N)");
	       String result=sc.next();
	       

	       
	       if(result.equalsIgnoreCase("N")) {
	    	   
	    	   System.out.println("Department Is Craeted ....");
	       }
			
	       else {
	    	   
	    	   System.out.println("Enter Employee Name");
	    	    String Ename= sc.next();
	    	   
	    	   
	    	   System.out.println("Enter Employee Salary");
	    	   double Esalary=sc.nextDouble();
	    	   
	    	   
	    	   Employee employee=new Employee(Ename, Esalary);
	    	   
	    	   department.getEmployees().add(employee);
	    	   
	    	   
	   
	    	   em.persist(employee);
	    	   
	    	   
	    	   System.out.println("You Want Add More Employee (Y/N)");
	    	   String out=sc.next();
	    	   if(out.equalsIgnoreCase("N")) {
	    		   
	    		   break;
	    	   }
	    	   
	    		em.persist(department);

	       }
	
		}if(depart!=null) {
			
			System.out.println("Department is Already Present....");
		}
		
		
	
		
		
		
 	   em.getTransaction().commit();
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}
}
